version: "3.9"
services:
  mssql:
    build:
      context: ./docker/mssql
    container_name: mrjb-debezium-mssql
    ports:
      - "1433:1433"
    # networks:
    #   - mrjb-debezium-network
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=RqrhWH5HmwGc6mEF
      - MSSQL_PID=Developer
      - MSSQL_AGENT_ENABLED=true

  # debug image
  ubuntu-kafka:
    build:
      context: ./docker/ubuntu-kafka
    container_name: mrjb-debezium-ubuntu-kafka
    # networks:
    #   - mrjb-debezium-network
    environment:
      - TZ=UTC
      - ZOOKEEPER_HOST=zookeeper
      - KAFKA_BROKER_ID=2

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: mrjb-debezium-zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: mrjb-debezium-broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      # cp
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      # disable auto create topics - https://debezium.io/documentation/reference/stable/configuration/topic-auto-create-config.html#disabling-automatic-topic-creation-for-the-kafka-broker
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

  debezium-connect:
    image: mrjb/debezium-connect:${DEBEZIUM_VERSION}
    build:      
      context: ./docker/connect/
      dockerfile: Dockerfile
      args:
        - DEBEZIUM_VERSION=${DEBEZIUM_VERSION}
        - KEYSTORE_PASSWORD=${KEY_PASSWORD}
        - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
        - KEY_PASSWORD=${KEY_PASSWORD}
    container_name: mrjb-debezium-connect
    ports:
      - 8083:8083
      - 8084:8084
    depends_on:
      - broker
      - mssql
    links:
      - zookeeper
      - broker
    healthcheck:
      # test
      test: 'curl -k -f -H "Accept:application/json" http://127.0.0.1:8083'
      # test: basic auth
      # test: 'curl -k -f -u ${DEBEZIUM_USER}:${DEBEZIUM_PASSWORD} -H "Accept:application/json" https://127.0.0.1:8084'
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s      
    # restarts: on-failure
    environment:
      - BOOTSTRAP_SERVERS=broker:29092
      - GROUP_ID=1
      # topics
      # - CONNECT_AUTO_CREATE_TOPICS=true
      - CONNECT_TOPIC_CREATION_ENABLE=true
      - CONFIG_STORAGE_TOPIC=debezium-configs
      - OFFSET_STORAGE_TOPIC=debezium-offsets
      - STATUS_STORAGE_TOPIC=debezium-statuses      
      # # ssl
      # - CONNECT_LISTENERS=http://0.0.0.0:8083,https://0.0.0.0:8084
      # - CONNECT_LISTENERS_HTTPS_SSL_ENABLE_PROTOCOL=TLSv1.2
      # - CONNECT_LISTENERS_HTTPS_SSL_KEY_PASSWORD=${KEY_PASSWORD}
      # - CONNECT_LISTENERS_HTTPS_SSL_KEYSTORE_LOCATION=/keystores/keystore.jks
      # - CONNECT_LISTENERS_HTTPS_SSL_KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      # - CONNECT_LISTENERS_HTTPS_SSL_TRUSTSTORE_LOCATION=/keystores/truststore.jks
      # - CONNECT_LISTENERS_HTTPS_SSL_TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
      # # basic auth
      # - CONNECT_REST_EXTENSION_CLASSES=org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension
      # - KAFKA_OPTS=-Djava.security.auth.login.config=/kafka/config/debezium_jaas.conf
      # log level
      - LOG_LEVEL=ERROR
    volumes:
     - ./history:/kafka/connect/history/ # windows

  debezium-ui:
    image: debezium/debezium-ui
    container_name: mrjb-debezium-ui
    ports:
      - 8080:8080
    environment:
      - KAFKA_CONNECT_URIS=http://debezium-connect:8083
    depends_on:
      - debezium-connect
      - broker
      - mssql
    # networks:
    #   - mrjb-debezium-network

  # ksqldb-server:
  #   image: confluentinc/cp-ksqldb-server:7.3.1
  #   hostname: ksqldb-server
  #   container_name: ksqldb-server
  #   depends_on:
  #     - broker
  #     - connect
  #   ports:
  #     - "8088:8088"
  #   environment:
  #     KSQL_CONFIG_DIR: "/etc/ksql"
  #     KSQL_BOOTSTRAP_SERVERS: "broker:29092"
  #     KSQL_HOST_NAME: ksqldb-server
  #     KSQL_LISTENERS: "http://0.0.0.0:8088"
  #     KSQL_CACHE_MAX_BYTES_BUFFERING: 0
  #     KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
  #     KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
  #     KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
  #     KSQL_KSQL_CONNECT_URL: "http://connect:8083"
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
  #     KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

  # ksqldb-cli:
  #   image: confluentinc/cp-ksqldb-cli:7.3.1
  #   container_name: ksqldb-cli
  #   depends_on:
  #     - kafka
  #     - connect
  #     - ksqldb-server
  #   entrypoint: /bin/sh
  #   tty: true

# networks:
#   mrjb-debezium-network: